name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.0

      # Cache pnpm dependencies
      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Prune pnpm store
        run: pnpm store prune

      - name: Install dependencies
        run: |
          retry() {
            for i in {1..3}; do
              "$@" && break || {
                echo "Retrying in 10 seconds..."
                sleep 10
              }
            done
          }
          retry pnpm install --frozen-lockfile

      - name: Build project
        env:
          BASE_URL: '/cyclepath/'
        run: |
          pnpm exec nx build cyclepath --base=$BASE_URL

      # Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Upload artifact for deployment
      - name: Upload to GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/cyclepath/dist # Path to your build output

  # Deploy step (separate job for GitHub Pages deployment)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
